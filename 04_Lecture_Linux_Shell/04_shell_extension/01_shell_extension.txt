white space / alias / command type / command control

1) 명령문을 해석하여 실제 실행 될 명령문으로 변환

token 분리 : 공백을 기준으로 토큰 분리
명령 전 처리 : alias , keyword, 메타문자, \, ! 를 이용한 history 처리
확장 및 치환 : 변수, 산술 확장, 명령 치환, 단어 분리 등 다양한 동작
Quotes 삭제 : '' "" emddml Quotes 를 삭제 후 명령문으로 사용함

2) 프로세스를 생성하고 exec 시스템 콜 함수에 인수를 전달하여 명령 실행

**************************** 

# 리눅스의 파일이름은 NUL과 /를 제외하고 전부 허용
- . .. [ { ( 등의 특수문자도 파일 이름 허용

# 공백으로 명령 및 인수들의 구분이 이루어진다.
- 공백의 잘못된 사용으로 오류가 발생할 수 있음.
- $A = 10 : A 명령 = , 10 전달 인수로 해석 됨

# =, [, {, 을 실수 없이 사용하려면?
- 공백의 사용에 주의해야 함 : 대입을 제외하고 모든 경우 공백을 사용하자!

# 명령 전처리에서 이루어지는 작업
- alias, keyword, 메타문자, \, !를 이용한 명령 history 처리

# alias, keyword, 메타문자 (metacharacter) 는 무엇일까?
- alias : alias 로 지정된 명령을 읽고 실행하는 것이다.
- keyword : 쉘이 알고 있는 예약어로 변수 이름으로 사용할 수 없다.
- 메타문자 : 특별한 의미를 가진 문자, 어떤 명령에서 사용되는가에 따른 의미 일 수 있다.

# 내장 명령은 무엇일까?
- builtin : 쉘이 인수를 전달하고 종료 상태를 전달 받을 수 있는 별도 파일이 없다.

# 이름 중복 시 명령을 찾는 우선 순위
- alias -> keyword -> function -> builtin -> 외부 명령

# 명령이 포함되는 종류를 모두 알고싶다면?
- type -a kill

# 명령 제어에 사용되는 메타 문자
- ;  한 행에 여러 
- & 명령을 백그라운드에서 실행
- && 앞 명령 실행 후 결과가 성공이면 뒤 명령 실행
- || 앞 명령 실행 후 결과가 실패면 뒤 명령 실행
